---
name: Deploy Docker Image

on:
  schedule:
    - cron: '0 23 * * *' # daily at 23:00

jobs:

  deploy:

    runs-on: ubuntu-latest
    environment: release

    steps:
      - uses: actions/checkout@v4.0.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.9.0
      
      - name: Docker meta - base
        id: meta_base
        uses: docker/metadata-action@v4.6.0
        with:
          images: |
            artis3n/kali
            ghcr.io/artis3n/kali
          flavor: |
            latest=auto
            prefix=
            suffix=-no-wordlists,onlatest=true
          tags: |
            type=schedule
            type=edge,branch=main
            type=raw,value=latest
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: |
            artis3n/kali
            ghcr.io/artis3n/kali
          tags: |
            type=schedule
            type=edge,branch=main
            type=raw,value=latest

      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and Push
        uses: docker/build-push-action@v4.1.1
        with:
          target: base
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_base.outputs.tags }}
          labels: ${{ steps.meta_base.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and Push
        uses: docker/build-push-action@v4.1.1
        with:
          target: wordlists
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
